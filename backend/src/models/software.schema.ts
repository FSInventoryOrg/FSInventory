import { Schema } from 'mongoose';
import Asset, { AssetType } from './asset.schema';

export interface SoftwareType extends AssetType {
  license: string;
  version: string;
}

/**
 * @openapi
 * components:
 *  schemas:
 *    Software:
 *      type: object
 *      allOf:
 *        - $ref: '#/components/schemas/Asset'
 *        - type: object
 *      properties:
 *        _id:
 *          type: string
 *          example: 98c72c43-6d5f-4158-b965-6d0e526e3817
 *          description: Auto-generated by MongoDB/Mongoose
 *        code:
 *          type: string
 *          example: FS-XYZ-B
 *        type:
 *          type: string
 *          example: Software
 *        category:
 *          type: string
 *          example: Video Editing
 *        brand:
 *          type: string
 *          example: Apple
 *        modelName:
 *          type: string
 *          example: Final Cut Pro
 *        modelNo:
 *          type: string
 *        serialNo:
 *          type: string
 *          example: CCNPR-L3D8X-KM0KN-XUJS9-ASY7R
 *        dateAdded:
 *          type: string
 *          format: date-time
 *          example: "2024-03-14T00:00:00.000Z"
 *        license:
 *          type: string
 *          example: Full License
 *        version:
 *          type: string
 *          example: 10.7.1
 */
const softwareSchema: Schema<SoftwareType> = new Schema<SoftwareType>({
  license: { type: String, required: false },
  version: { type: String, required: false },
});

const Software = Asset.discriminator<SoftwareType>("Software", softwareSchema);

export default Software;
