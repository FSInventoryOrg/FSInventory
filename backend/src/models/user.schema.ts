import mongoose, { Schema } from 'mongoose';
import bcrypt from 'bcryptjs'

export interface UserType {
  _id: string;
  email: string;
  password: string;
  firstName: string;
  lastName: string;
  joinDate: Date;
  role: "USER" | "ADMIN";
}

/**
 * @openapi
 * components:
 *  schemas:
 *    User:
 *      type: object
 *      required:
 *        - email
 *        - password
 *        - firstName
 *        - lastName
 *        - joinDate
 *        - role
 *      properties:
 *        _id:
 *          type: string
 *          example: b40f7c8b-acf7-4101-8010-276d5eb07760
 *          description: Auto-generated by MongoDB/Mongoose
 *        email:
 *          type: string
 *          example: john.doe@example.com
 *        password:
 *          type: string
 *          description: >
 *            The password field is encrypted or hashed using bcryptjs.
 *            It should not be in plain text.
 *          example: password123
 *        firstName:
 *          type: string
 *          example: John
 *        lastName:
 *          type: string
 *          example: Doe
 *        joinDate:
 *          type: string
 *          format: date-time
 *          example: "2024-03-14T00:00:00.000Z"
 *        role:
 *          type: string
 *          enum: [USER, ADMIN]
 *          example: ADMIN
 */
const userSchema: Schema<UserType> = new mongoose.Schema<UserType>({
  email: { type: String, required: true, unique: true },
  // TODO: Remove select: false. Temporarily excludes password in queried User. 
  password: { type: String, required: true, select:false },
  firstName: { type: String, required: true },
  lastName: { type: String, required: true },
  joinDate: { type: Date, required: true },
  role: { type: String, enum: ["USER", "ADMIN"], required: true },
});

/* HASH PASSWORD */
userSchema.pre("save", async function(next) {
  if(this.isModified('password')) {
    this.password = await bcrypt.hash(this.password, 8)
  }
  next();
})

const User = mongoose.model<UserType>("User", userSchema);

export default User;

