import mongoose, { Schema, Document } from 'mongoose';

export type StatusOptions = {
  value: string;
  color?: string;
}

export type CategoryOptions = {
  value: string;
  properties?: string[];
}

export type Defaults = {
  status?: string;
  category?: string;
  equipmentType?: string;
  deployableStatus?: string;
  retrievableStatus?: string;
  inventoryColumns?: string[];
}

export interface OptionsType extends Document {
  _id: string;
  status: StatusOptions[];
  category: CategoryOptions[];
  equipmentType: string[];
  defaults: Defaults;
}

/**
 * @openapi
 * components:
 *  schemas:
 *    Options:
 *      type: object
 *      required:
 *        - status
 *        - category
 *        - brand
 *        - processor
 *        - memory
 *        - storage
 *      properties:
 *        _id:
 *          type: string
 *          example: 01972cf9-c3c7-48c9-8628-ef6148d09c96
 *          description: Auto-generated by MongoDB/Mongoose
 *        status:
 *          type: array
 *          items:
 *            type: object
 *            properties:
 *              value:
 *                type: string
 *              color:
 *                type: string
 *          example: [{"value": "status1", "color": "red"}, {"value": "status2", "color": "blue"}]
 *          description: List of status options
 *        category:
 *          type: array
 *          items:
 *            type: string
 *          example: [{"value": "category1", "properties": ["property1", "property2"]}, {"value": "category", "properties": ["property2", "property3"]}]
 *          description: List of categories
 *        equipmentType:
 *          type: array
 *          items:
 *            type: string
 *          example: ["DEV", "QA", "OFFICE"]
 *          description: List of equipment types
 *        defaults:
 *          type: object
 *          properties:
 *            status:
 *              type: string
 *            category:
 *              type: string
 *            equipmentType:
 *              type: string
 *          example: {"status": "status1", "category": "category1", "equipmentType": "equipmentType"}
 *          description: List of default option values
 */
const optionsSchema: Schema<OptionsType> = new Schema<OptionsType>({
  status: { 
    type: [{ 
      value: { type: String, required: true }, 
      color: { type: String, required: false } 
    }], 
    required: true 
  },
  category: { 
    type: [{
      value: { type: String, required: true },
      properties: { type: [String], required: false}
    }],
    required: true },
  equipmentType: { type: [String], required: true },
  defaults: {
    type: { 
      status: { type: String, required: false }, 
      category: { type: String, required: false },
      equipmentType: { type: String, required: false },
      deployableStatus: { type: String, required: false },
      retrievableStatus: { type: String, required: false },
      inventoryColumns: { type: [String], required: false },
    }, 
  }
});

const Option = mongoose.model<OptionsType>("Options", optionsSchema);

export default Option;
